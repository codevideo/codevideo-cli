{"version":3,"file":"component---src-pages-index-tsx-7ddebb6d48be015da57e.js","mappings":"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","sources":["webpack://codevideo-ide-react-examples/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { GUIMode, IAction, Project, IAudioItem } from \"@fullstackcraftllc/codevideo-types\"\n// actual package import\nimport { CodeVideoIDE } from \"@fullstackcraftllc/codevideo-ide-react\"\n// local import from src below - doesn't seem to work because of relative path issues\n// import { CodeVideoIDE } from \"../../../src/CodeVideoIDE\"\nimport { Box, Flex, Theme } from \"@radix-ui/themes\";\nimport { useEffect, useState } from \"react\";\n\nconst audios: Array<IAudioItem> = []\nconst speakActionAudios =  [];\n\nconst actions: Array<IAction> = [\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"Hi guys, Chris here - I've just added some major updates to the CodeVideo React IDE. I'm excited to show you the new features we've implemented!\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"One of our biggest improvements is the enhanced file explorer with context menus. Let me demonstrate how to create files using this new feature.\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"Let's create our first file called a.txt using the new context menu.\"\n  },\n  {\n    \"name\": \"mouse-move-file-explorer\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-right-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"Notice how we now have a context menu whenever right clicking in the file explorer - this is one of our new features!\"\n  },\n  {\n    \"name\": \"mouse-move-file-explorer-context-menu-new-file\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-left-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"file-explorer-type-new-file-input\",\n    \"value\": \"a.txt\"\n  },\n  {\n    \"name\": \"file-explorer-enter-new-file-input\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"Perfect! Now let's create a second file to show how our multi-tab support works.\"\n  },\n  {\n    \"name\": \"mouse-move-file-explorer\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-right-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-move-file-explorer-context-menu-new-file\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-left-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"file-explorer-type-new-file-input\",\n    \"value\": \"b.txt\"\n  },\n  {\n    \"name\": \"file-explorer-enter-new-file-input\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"And now a third file - our advanced mouse tracking system allows for seamless interaction between multiple files.\"\n  },\n  {\n    \"name\": \"mouse-move-file-explorer\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-right-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-move-file-explorer-context-menu-new-file\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-left-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"file-explorer-type-new-file-input\",\n    \"value\": \"c.txt\"\n  },\n  {\n    \"name\": \"file-explorer-enter-new-file-input\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"Now let's add some content to our c.txt file to demonstrate another new feature - our unsaved changes detection system.\"\n  },\n  {\n    \"name\": \"mouse-move-editor\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-left-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"editor-type\",\n    \"value\": \"console.log('Hello, world!');\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"Great! Now let's try to close this file without saving it to trigger our brand new unsaved changes dialog.\"\n  },\n  {\n    \"name\": \"mouse-move-editor-tab-close\",\n    \"value\": \"c.txt\"\n  },\n  {\n    \"name\": \"mouse-left-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"As you can see, we now have a professional IDE-style unsaved changes dialog that prompts you to save your work!\"\n  },\n  {\n    \"name\": \"mouse-move-unsaved-changes-dialog-button-dont-save\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"mouse-left-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"We chose not to save the changes, and now the file is closed. Let's close another tab to show how our tab management works.\"\n  },\n  {\n    \"name\": \"mouse-move-editor-tab-close\",\n    \"value\": \"a.txt\"\n  },\n  {\n    \"name\": \"mouse-left-click\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"author-speak-before\",\n    \"value\": \"And that's it! We now have a fully functional IDE with context menus, advanced mouse tracking, tab management, and unsaved changes detection. Thanks for checking out our latest updates to the CodeVideo React IDE! Lots more coming soon - stay tuned!\"\n  }\n];\n\n// TODO: actually none of these other strings affect the project... so?????\nconst project: Project = {\n  id: '',\n  name: '',\n  description: '',\n  primaryLanguage: '',\n  lessons: [\n    {\n      id: '',\n      name: '',\n      description: '',\n      actions: actions\n    }\n  ]\n};\n\n// same as step for now - probably should become more universal example\nexport default function Home() {\n  const [mode, setMode] = useState<GUIMode>('step')\n  const [currentActionIndex, setCurrentActionIndex] = useState(0)\n\n  // on mount, ensure that currentActionIndex is set to 0\n  useEffect(() => {\n    setCurrentActionIndex(0)\n    setMode('step')\n  }, [])\n\n  // on mount, setup event listeners for left and right arrow keys - to navigate between actions\n  useEffect(() => {\n    if (mode !== 'step') {\n      return\n    }\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'ArrowRight' && currentActionIndex < actions.length - 1) {\n        console.log('going to next action')\n        setCurrentActionIndex(currentActionIndex + 1)\n      } else if (e.key === 'ArrowLeft' && currentActionIndex > 0) {\n        console.log('going to previous action')\n        setCurrentActionIndex(currentActionIndex - 1)\n      } else if (e.key === ' ') {\n        console.log('replaying mode active')\n        // reset actions to 0 and set mode to replay\n        setCurrentActionIndex(0)\n        setMode('replay')\n      }\n    }\n    window.addEventListener('keydown', handleKeyDown)\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [mode, currentActionIndex])\n\n\n\n  const goToNextAction = () => {\n    if (currentActionIndex < actions.length - 1) {\n      setCurrentActionIndex(currentActionIndex + 1)\n    }\n  }\n\n  // Note the codevideoIDE must be rendered within a radix <Theme/> scope to render properly\n  return (\n    <Theme\n      accentColor=\"mint\"\n      appearance=\"dark\"\n      panelBackground=\"translucent\"\n      radius=\"large\"\n    >\n      <Flex direction=\"column\" justify=\"center\" align=\"center\">\n        <Box\n          style={{\n            height: '100vh',\n            width: '100vw',\n          }}\n        >\n          <CodeVideoIDE\n            theme='dark'\n            project={project}\n            mode={mode}\n            allowFocusInEditor={false}\n            defaultLanguage={'python'}\n            isExternalBrowserStepUrl={null}\n            currentActionIndex={currentActionIndex}\n            currentLessonIndex={0}\n            isSoundOn={true}\n            withCaptions={true}\n            actionFinishedCallback={goToNextAction}\n            speakActionAudios={speakActionAudios}\n            fileExplorerWidth={400}\n            terminalHeight={250}\n            mouseColor=\"black\" \n            playBackCompleteCallback={() => {}}\n          />\n        </Box>\n      </Flex>\n    </Theme>\n  )\n}\n"],"names":["speakActionAudios","actions","project","id","name","description","primaryLanguage","lessons","Home","mode","setMode","useState","currentActionIndex","setCurrentActionIndex","useEffect","handleKeyDown","e","key","length","console","log","window","addEventListener","removeEventListener","React","Theme","accentColor","appearance","panelBackground","radius","Flex","direction","justify","align","Box","style","height","width","CodeVideoIDE","theme","allowFocusInEditor","defaultLanguage","isExternalBrowserStepUrl","currentLessonIndex","isSoundOn","withCaptions","actionFinishedCallback","fileExplorerWidth","terminalHeight","mouseColor","playBackCompleteCallback"],"sourceRoot":""}