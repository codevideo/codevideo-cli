"use strict";(self.webpackChunkcodevideo_ide_react_examples=self.webpackChunkcodevideo_ide_react_examples||[]).push([[21],{1855:function(e,t,a){a.r(t),a.d(t,{default:function(){return s}});var n=a(7294),o=a(4246),r=a(1051),l=a(4144),i=a(5564);const d=[],u=[{name:"author-speak-before",value:"This tutorial will show you how to generate PDFs from markdown using our docsascode generator tool. We'll create a markdown file, then a doc.yml file, and then run the generator."},{name:"file-explorer-create-file",value:"hello-world.md"},{name:"file-explorer-open-file",value:"hello-world.md"},{name:"author-speak-during",value:"First, let's create a markdown file with some sample content. Notice we can use any valid markdown: headings, code blocks, and more!"},{name:"editor-type",value:"# Hello World"},{name:"editor-enter",value:"2"},{name:"editor-type",value:"This is a test of the `docsascode` generator."},{name:"editor-enter",value:"2"},{name:"editor-type",value:"Any standard markdown should work, including:"},{name:"editor-enter",value:"2"},{name:"editor-type",value:"## Subtitles"},{name:"editor-enter",value:"2"},{name:"editor-type",value:"### Subsubtitles"},{name:"editor-enter",value:"2"},{name:"editor-type",value:"Inline `code` and **inline bold** text."},{name:"editor-enter",value:"2"},{name:"editor-type",value:"Code snippets:"},{name:"editor-enter",value:"2"},{name:"editor-type",value:"```python"},{name:"editor-enter",value:"1"},{name:"editor-type",value:'print("Hello World")'},{name:"editor-enter",value:"1"},{name:"editor-type",value:"```"},{name:"editor-enter",value:"2"},{name:"editor-type",value:"and so on..."},{name:"editor-save",value:"1"},{name:"author-speak-during",value:"Now let's create a doc.yml configuration file. This tells pandoc how to generate our PDF."},{name:"file-explorer-create-file",value:"doc.yml"},{name:"file-explorer-open-file",value:"doc.yml"},{name:"editor-type",value:"variables:"},{name:"editor-enter",value:"1"},{name:"editor-type",value:"  title:  'My First Docsascode Generator PDF'"},{name:"editor-enter",value:"1"},{name:"editor-type",value:"  subtitle: 'Courtesy Solve Innovation'"},{name:"editor-enter",value:"2"},{name:"editor-type",value:"to: pdf"},{name:"editor-enter",value:"1"},{name:"editor-type",value:"output-file: ./hello-world.pdf"},{name:"editor-enter",value:"2"},{name:"editor-type",value:"input-files:"},{name:"editor-enter",value:"1"},{name:"editor-type",value:"- hello-world.md"},{name:"editor-save",value:"1"},{name:"author-speak-during",value:"Perfect! This config sets the title, specifies PDF output, and points to our markdown file."},{name:"terminal-open",value:"1"},{name:"author-speak-during",value:"Finally, let's run the generator using Docker. We'll mount our current directory and run the docsascode container."},{name:"terminal-type",value:'docker run --rm --volume "$(pwd):/data" -w /data/ registry.solve.ch/solve/documentation-tools/docsascode-generator:latest --defaults doc.yml'},{name:"terminal-enter",value:"1"},{name:"terminal-set-output",value:"Processing document...\n[LaTeX] Compiling PDF...\n[LaTeX] Processing markdown content...\n[LaTeX] Applying eisvogel template...\n[LaTeX] Document compilation successful!\nPDF generated: hello-world.pdf"},{name:"file-explorer-create-file",value:"hello-world.pdf"},{name:"author-speak-after",value:"Excellent! You've now generated a professional PDF from markdown. The docker flags ensure clean execution, file access, and proper cleanup."}];function s(){const{0:e,1:t}=(0,n.useState)("step"),{0:a,1:s}=(0,n.useState)(0),{0:c,1:m}=(0,n.useState)(!1);(0,n.useEffect)((()=>{const e=["click","keydown","touchstart"],a=()=>{c||(s(0),t("replay"),m(!0))};return e.forEach((e=>{document.addEventListener(e,a,{once:!0})})),()=>{e.forEach((e=>{document.removeEventListener(e,a)}))}}),[c]);return n.createElement(r.Q2,{accentColor:"mint",appearance:"dark",panelBackground:"translucent",radius:"large"},n.createElement(l.k,{direction:"column",justify:"center",align:"center"},n.createElement(i.x,{style:{height:"100vh",width:"100vw"}},n.createElement(o.Zv,{theme:"dark",project:u,mode:e,allowFocusInEditor:!1,defaultLanguage:"python",isExternalBrowserStepUrl:null,currentActionIndex:a,currentLessonIndex:0,isSoundOn:!0,withCaptions:!0,actionFinishedCallback:()=>{if(console.log("goToNextAction called, currentActionIndex:",a),a<u.length-1){const e=a+1;console.log("Going to next action:",e),s(e)}},speakActionAudios:d,fileExplorerWidth:400,terminalHeight:250,mouseColor:"green",resolution:"1080p"}))))}}}]);
//# sourceMappingURL=component---src-pages-replay-tsx-b65983d4e3912f17ff8b.js.map